name: Docker Image CI

on:
  push:
    branches: [ "master", "develop" ]
  pull_request:
    branches: [ "master", "develop" ]

jobs:

  build:
    name: Build and Push Image
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0 # required by gitversion
        
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.13
      with:
        versionSpec: '5.x'
        
    - name: Determine Version
      uses: gittools/actions/gitversion/execute@v0.9.13
      
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
    
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag mharris867/jenkinsmasteraci:${{ env.GITVERSION_SEMVER }} --tag mharris867/jenkinsmasteraci:latest
      
    - name: Push Docker Image
      run: docker push mharris867/jenkinsmasteraci:${{ env.GITVERSION_SEMVER }}

    - name: Set Release RC
      shell: powershell
      run: |
        if ($env:GITHUB_REF_NAME -Like '*master*' -or $env:GITHUB_REF_NAME -Like '*main*' ) {$prerelease = "false"}
        else {$prerelease = "true"}
        Add-Content -Path $env:GITHUB_ENV -Value "prerelease=$prerelease"
        Write-Host "Pre-release Set To: $prerelease"

    - name: Create Release
      uses: ncipollo/release-action@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        generateReleaseNotes: "true"
        prerelease: ${{ env.prerelease }}
        tag: ${{ env.GITVERSION_SEMVER }}
        name: ${{ env.GITVERSION_INFORMATIONALVERSION }}
        owner: ${{ env.GITHUB_REPOSITORY_OWNER }}
        commit: ${{ env.GITHUB_SHA }}
        
  deploy:
    name: Deploy to ACI
    runs-on: windows-latest
    needs: build
    steps:
      # checkout branch
      - name: git checkout main branch
        uses: actions/checkout@v3
        
      - name: List Variables
        shell: powershell
        run: |
         Write-Host "Listing Available Environment Variables"
         get-childitem "env:"
         Write-Host "------------- End of Variable List -------------------" 

      # log into Azure
      - name: "Login via Azure CLI"
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: 'Create Jenkins Master in ACI'
        uses: 'azure/aci-deploy@v1'
        with:
          resource-group: jenkinsaci
          name: pr-${{github.event.number}}-deploy
          dns-name-label: pr-${{github.event.number}}
          image: mharris867/jenkinsmasteraci:latest
          location: westus
          ports: 8080

      
      - name: "Wrapping up"
        run: echo "fqdn=$(az container show -g jenkinsaci -n pr-${{github.event.number}} --query 'ipAddress.fqdn' -o tsv)" >> $GITHUB_ENV
      
      - uses: jldeen/add-review-url@releases/v0              
        with:
            repo-token: ${{ secrets.GITHUB_TOKEN }}  
            fqdn: ${{ env.fqdn }}
