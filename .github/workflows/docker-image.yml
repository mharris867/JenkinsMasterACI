name: Docker Image CI

on:
  push:
    branches: [ "master", "develop" ]
  pull_request:
    branches: [ "master", "develop" ]

jobs:

  build:
    name: Build, Push And Deploy Image
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0 # required by gitversion
        
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.13
      with:
        versionSpec: '5.x'
        
    - name: Determine Version
      uses: gittools/actions/gitversion/execute@v0.9.13
      
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
    
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag mharris867/jenkinsmasteraci:${{ env.GITVERSION_SEMVER }}
      
    - name: Push Docker Image
      run: docker push mharris867/jenkinsmasteraci:${{ env.GITVERSION_SEMVER }}

    - name: Set Release Candidate Variables
      shell: powershell
      run: |
        if ($env:GITHUB_REF_NAME -Like '*master*' -or $env:GITHUB_REF_NAME -Like '*main*' ) {$prerelease = "false"}
        else {$prerelease = "true"}
        Add-Content -Path $env:GITHUB_ENV -Value "prerelease=$prerelease"
        Write-Host "Pre-release Set To: $prerelease"
        
    - name: Create Release
      uses: ncipollo/release-action@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        generateReleaseNotes: "true"
        prerelease: ${{ env.prerelease }}
        tag: ${{ env.GITVERSION_SEMVER }}
        name: ${{ env.GITVERSION_INFORMATIONALVERSION }}
        owner: ${{ env.GITHUB_REPOSITORY_OWNER }}
        commit: ${{ env.GITHUB_SHA }}
        
    - name: List Variables
      shell: powershell
      run: |
       Write-Host "Listing Available Environment Variables"
       get-childitem "env:"
       Write-Host "------------- End of Variable List -------------------" 
       
      # log into Azure
    - name: "Login via Azure CLI"
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        
    # Create storage account
    - name: "Create storage account"
      shell: powershell
      run: |
        $storage_account_name = ("${{ env.GitVersion_EscapedBranchName }}" + "acistorage").Replace("-","")
        az storage account create -n $storage_account_name -g jenkinsaci --sku Standard_LRS --kind FileStorage
        $storage_account_key = (az storage account keys list --account-name $storage_account_name -g jenkinsaci --query '[0].value' -o tsv)
        Add-Content -Path $env:GITHUB_ENV -Value "storage_account_name=$storage_account_name"
        Add-Content -Path $env:GITHUB_ENV -Value "storage_account_key=$storage_account_key"
        echo "::add-mask::$storage_account_key"
      
        
    - name: 'Create Jenkins Master in ACI'
      uses: 'azure/aci-deploy@v1'
      with:
        resource-group: jenkinsaci
        name: ${{ env.GitVersion_EscapedBranchName }}
        dns-name-label: ${{ env.GitVersion_EscapedBranchName }}
        image: mharris867/jenkinsmasteraci:${{ env.GITVERSION_SEMVER }}
        os-type: Windows
        location: 'east us'
        ports: 8080
        # azure-file-volume-share-name: ${{ env.GitVersion_EscapedBranchName }}files
        # azure-file-volume-account-name: ${{ env.storage_account_name }}
        # azure-file-volume-account-key: ${{ secrets.storage_account_key }}
        # azure-file-volume-mount-path: C:\ProgramData\jenkins\jenkinshome
      
    - name: "Put Link To Deployment In Comments"
      if: github.event_name == 'pull_request'
      shell: powershell
      run: |
        $fqdn = (az container show -g jenkinsaci -n ${{ env.GitVersion_EscapedBranchName }} --query 'ipAddress.fqdn' -o tsv) + ":8080"
        Add-Content -Path $env:GITHUB_ENV -Value "fqdn=$fqdn"
        Write-Host "link to deployment: $fqdn"    
        
    - uses: jldeen/add-review-url@releases/v0 
      if: github.event_name == 'pull_request'
      with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}  
          fqdn: ${{ env.fqdn }}
